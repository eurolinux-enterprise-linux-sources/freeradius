From f3974c00b230c07c875cb37f19b77b401471ee20 Mon Sep 17 00:00:00 2001
From: Nikolai Kondrashov <Nikolai.Kondrashov@redhat.com>
Date: Mon, 14 Jul 2014 17:32:36 +0300
Subject: [PATCH 1/1] Add response_timeouts option

Add "response_timeouts" - a home server option specifying number of times
replies are allowed to miss "response_window" before the server enters the
zombie period.

This allows more tolerance before transiting to zombie period for lower
response window configurations.
---
 raddb/proxy.conf     | 10 +++++++++-
 src/include/realms.h |  2 ++
 src/main/event.c     |  8 ++++++++
 src/main/realms.c    |  6 ++++++
 4 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/raddb/proxy.conf b/raddb/proxy.conf
index 92f4a65..7d0ae8d 100644
--- a/raddb/proxy.conf
+++ b/raddb/proxy.conf
@@ -231,7 +231,9 @@ home_server localhost {
 
 	#
 	#  If the home server does not respond to a request within
-	#  this time, this server will initiate "zombie_period".
+	#  this time, the server marks the request as timed out.
+	#  After "response_timeouts", the home server is marked
+	#  as being "zombie", and "zombie_period" starts.
 	#
 	#  The response window can be a number between 0.001 and 60.000
 	#  Values on the low end are discouraged, as they will likely
@@ -244,6 +246,12 @@ home_server localhost {
 	response_window = 20
 
 	#
+	#  Start "zombie_period" after this many responses have
+	#  timed out.
+	#
+#	response_timeouts = 1
+
+	#
 	#  If you want the old behavior of the server rejecting
 	#  proxied requests after "response_window" timeout, set
 	#  the following configuration item to "yes".
diff --git a/src/include/realms.h b/src/include/realms.h
index 2f185da..d7e6edd 100644
--- a/src/include/realms.h
+++ b/src/include/realms.h
@@ -52,6 +52,8 @@ typedef struct home_server {
 	struct timeval	when;
 
 	struct timeval	response_window;
+	int		response_timeouts;
+	int		max_response_timeouts;
 	int		no_response_fail;
 	int		max_outstanding; /* don't overload it */
 	int		currently_outstanding;
diff --git a/src/main/event.c b/src/main/event.c
index f7e5a1b..3b7dff5 100644
--- a/src/main/event.c
+++ b/src/main/event.c
@@ -697,6 +697,7 @@ void revive_home_server(void *ctx)
 	char buffer[128];
 
 	home->state = HOME_STATE_ALIVE;
+	home->response_timeouts = 0;
 	home->currently_outstanding = 0;
 	home->revive_time = now;
 
@@ -777,6 +778,7 @@ static void received_response_to_ping(REQUEST *request)
 	}
 
 	home->state = HOME_STATE_ALIVE;
+	home->response_timeouts = 0;
 	home->currently_outstanding = 0;
 	home->revive_time = now;
 
@@ -1182,6 +1184,11 @@ static void no_response_to_proxied_request(void *ctx)
 		return;
 	}
 
+	/* If haven't exceeded maximum response timeouts */
+	home->response_timeouts++;
+	if (home->response_timeouts < home->max_response_timeouts)
+		return;
+
 	/*
 	 *	Set the home server to "zombie", as of the time
 	 *	calculated above.
@@ -3211,6 +3218,7 @@ REQUEST *received_proxy_response(RADIUS_PACKET *packet)
 	 *	This behavior could be configurable.
 	 */
 	request->home_server->state = HOME_STATE_ALIVE;
+	request->home_server->response_timeouts = 0;
 	request->home_server->last_packet = now.tv_sec;
 	
 #ifdef WITH_COA
diff --git a/src/main/realms.c b/src/main/realms.c
index e185f7c..e4002a5 100644
--- a/src/main/realms.c
+++ b/src/main/realms.c
@@ -323,6 +323,8 @@ static CONF_PARSER home_server_config[] = {
 
 	{ "response_window", PW_TYPE_TIMEVAL,
 	  offsetof(home_server,response_window), NULL,   "30" },
+	{ "response_timeouts", PW_TYPE_INTEGER,
+	  offsetof(home_server,max_response_timeouts), NULL,   "1" },
 	{ "no_response_fail", PW_TYPE_BOOLEAN,
 	  offsetof(home_server,no_response_fail), NULL,   NULL },
 	{ "max_outstanding", PW_TYPE_INTEGER,
@@ -655,6 +657,9 @@ static int home_server_add(realm_config_t *rc, CONF_SECTION *cs)
 			home->response_window.tv_usec) >> 1;
 	if (timercmp(&mainconfig.init_delay, &tv, >)) mainconfig.init_delay = tv;
 
+	if (home->max_response_timeouts < 1) home->max_response_timeouts = 1;
+	if (home->max_response_timeouts > 1000) home->max_response_timeouts = 1000;
+
 	if (home->zombie_period < 1) home->zombie_period = 1;
 	if (home->zombie_period > 120) home->zombie_period = 120;
 
@@ -2168,6 +2173,7 @@ home_server *home_server_ldb(const char *realmname,
 			if ((home->state == HOME_STATE_IS_DEAD) &&
 			    (home->ping_check == HOME_PING_CHECK_NONE)) {
 				home->state = HOME_STATE_ALIVE;
+				home->response_timeouts = 0;
 				if (!found) found = home;
 			}
 		}
-- 
2.1.4

